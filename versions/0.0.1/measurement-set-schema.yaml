id: https://github.com/CMSgov/mips-data-format/versions/0.0.1/measurement-set-schema.yaml
$schema: http://json-schema.org/schema#
type: object
properties:
  version: { type: string }
  category: { enum: [ia, quality, aci, cost] }
  measureSet: { $ref: #/definitions/measure-set }
  # performanceStart and performanceEnd should be formatted as YYYY-MM-DD
  performanceStart: { $ref: #/definitions/nullable-string }
  performanceEnd: { $ref: #/definitions/nullable-string }
  measurements:
    type: array
    items: { $ref: #/definitions/measurement }
required: [version, category, measurements]

definitions:
  nullable-string:
    oneOf:
      - { type: string }
      - { type: "null" }

  # TODO (Mari): add remaining measure sets
  measure-set:
    oneOf:
      - { enum: [generalSurgery] }
      - { type: "null" }

  measurement:
    type: object
    properties:
      measureId: { type: string }
      value: { type: [boolean, object] }
    required: [measureId, value]
    oneOf:
      - { $ref: #/definitions/booleanMeasurement }
      - { $ref: #/definitions/proportionMeasurement }
      - { $ref: #/definitions/performanceRatioMeasurement }

  booleanMeasurement:
    type: object
    properties:
      value: { type: boolean }

  proportionMeasurement:
    type: object
    properties:
      value:
        type: object
        properties:
          numerator:
            type: integer
            minimum: 0
            exclusiveMinimum: true
          denominator:
            type: integer
            minimum: 0
            exclusiveMinimum: true
        required: [numerator, denominator]

  performanceRatioMeasurement:
    type: object
    properties:
      value:
        type: object
        properties:
          # number of claims where peformance criteria were met
          performanceMet:
            type: integer
            minimum: 0
          # number of cliams where the clinician deviated from the performance
          # criteria for a medically valid reason
          performanceExclusion:
            type: integer
            minimum: 0
          # number of cliams where performance criteria were not met
          performanceNotMet:
            type: integer
            minimum: 0
          # total number of claims
          initialPatientPopulation:
            type: integer
            minimum: 0
            exclusiveMinimum: true
        required: [performanceMet, performanceNotMet, initialPatientPopulation]
